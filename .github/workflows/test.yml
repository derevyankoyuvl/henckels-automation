name: E2E Tests

# Тригери запуску
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Запуск щодня о 2:00 UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Ручний запуск з параметрами
    inputs:
      country:
        description: 'Country to test (us/ca)'
        required: false
        default: 'us'
        type: choice
        options:
          - us
          - ca
      screen_size:
        description: 'Screen size'
        required: false
        default: 'desktop'
        type: choice
        options:
          - desktop
          - mobile
          - tablet

jobs:
  # Job для базових тестів
  basic-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        country: [us, ca]
        screen_size: [desktop, mobile]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        run: |
          docker build -t henckels-tests .
          
      - name: Debug Docker container contents
        run: |
          echo "=== Checking if pages directory exists in container ===" 
          docker run --rm henckels-tests ls -la /app/pages/ || echo "Pages directory not found"
          echo "=== Checking all .js files in container ==="
          docker run --rm henckels-tests find /app -name "*.js" | grep -E "(page|Page)" | head -10 || echo "No page files found"
          
      - name: Run POC tests
        run: |
          docker run --rm \
            -e COUNTRY=${{ matrix.country }} \
            -e SCREEN_SIZE=${{ matrix.screen_size }} \
            -e CI=true \
            -e HEADLESS=true \
            -e NODE_ENV=staging \
            -e BROWSER=chromium \
            -e HENCKELS_PROD_PASSWORD=${{ secrets.HENCKELS_PROD_PASSWORD }} \
            -e PAYPAL_TEST_EMAIL=${{ secrets.PAYPAL_TEST_EMAIL }} \
            -e PAYPAL_TEST_PASSWORD=${{ secrets.PAYPAL_TEST_PASSWORD }} \
            -e KLARNA_PHONE_US=${{ secrets.KLARNA_PHONE_US }} \
            -e KLARNA_PHONE_CA=${{ secrets.KLARNA_PHONE_CA }} \
            -e KLARNA_OTP=${{ secrets.KLARNA_OTP }} \
            -v ${{ github.workspace }}/output:/app/output \
            henckels-tests npm run test:poc:headless
            
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.country }}-${{ matrix.screen_size }}
          path: |
            output/
            reports/
          retention-days: 30
          
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.country }}-${{ matrix.screen_size }}
          path: output/
          retention-days: 7

  # Job для створення звіту
  report:
    runs-on: ubuntu-latest
    needs: [basic-tests]
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Generate combined report
        run: |
          echo "# Test Results Summary" > test-summary.md
          echo "## Test Execution Status" >> test-summary.md
          if [ "${{ needs.basic-tests.result }}" == "success" ]; then
            echo "✅ Basic tests: PASSED" >> test-summary.md
          else
            echo "❌ Basic tests: FAILED" >> test-summary.md
          fi
          
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('test-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });